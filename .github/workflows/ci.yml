# https://docs.github.com/en/actions/writing-workflows/quickstart

on:
  release:
    types: [created]
  push:
    branches:
      - master
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches:
      - master

jobs:
  release:
    name: Release ${{ matrix.target }}
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive: zip
          - target: x86_64-unknown-linux-musl
            archive: tar.gz tar.xz
          # - target: x86_64-apple-darwin
          #   archive: zip
    steps:
      - uses: actions/checkout@master
      - name: Compile and release
        uses: rust-build/rust-build.action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}
          EXTRA_FILES: "readme.org LICENSE"

  unit_tests:
    name: Release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        target: [x86_64-unknown-linux-musl]
    steps:
      - uses: actions/checkout@master
      - name: Compile and release
        uses: rust-build/rust-build.action@master
        with:
          RUSTTARGET: ${{ matrix.target }}
          UPLOAD_MODE: none
      - name: Run unit test
        run: |
          sudo chown -R $(whoami) .
          rustc --version
          cargo --version
          cargo test
      - name: Checkout build outputs
        # run: ls -laR
        run: find . -type f -not -path './.git/*' | sort

  code_lint:
    name: Check ${{ matrix.target }} code quality
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        target: [x86_64-unknown-linux-musl]
    steps:
      - uses: actions/checkout@master
      - name: Compile and release
        uses: rust-build/rust-build.action@master
        with:
          RUSTTARGET: ${{ matrix.target }}
          UPLOAD_MODE: none
      - name: Run linter
        run: |
          sudo chown -R $(whoami) .
          rustc --version
          cargo --version
          cargo clippy --quiet
